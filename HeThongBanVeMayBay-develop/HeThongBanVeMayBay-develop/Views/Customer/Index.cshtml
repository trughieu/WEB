@model HeThongBanVeMayBay.Models.HANHKHACH
@using HeThongBanVeMayBay.Models;
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @using (Html.BeginForm("AddCus", "Customer", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @*@if(Convert.ToInt32(Session["Adult"]) > 1)
        {
            using (var context = new QLBANVEMAYBAYEntities())
            {
                foreach (var item in context.PHIEUDATCHOes)
                {
                    <p>Thêm thông tin khách hàng thứ @context.PHIEUDATCHOes.Count(s => s.CMND == item.CMND)</p>
                }
            }
        }*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CMND, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CMND, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CMND, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenHanhKhach, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenHanhKhach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenHanhKhach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.GioiTinh,
                                            new SelectList(Enum.GetValues(typeof(Gender))),
                                            "Chọn giới tính", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DienThoai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DienThoai, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.HiddenFor(model => model.ChucVu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ChucVu, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        @if (Convert.ToString(Session["remember"]) != "")
        {
            <div class="form-group" style="display: none">
                <input type="checkbox" id="Remember" name="Remember" />
                <span></span>Gửi vé đến địa chỉ Email này
            </div>
        }
        else
        {
            <div class="form-group">
                <input type="checkbox" id="Remember" name="Remember" />
                <span></span>Gửi vé đến địa chỉ Email này
            </div>
        }

        @if (Convert.ToString(Session["IDChieuVe"]) == "")
        {
            <div>
                @{
                    Html.RenderAction("OrderOneWay", "Customer", new { Id = Convert.ToInt32(Session["IDChieuDi"]) });
                }
            </div>
        }
        else
        {
            <div>
                @{
                    Html.RenderAction("OrderOneWay", "Customer", new { Id = Convert.ToInt32(Session["IDChieuDi"]) });
                }
            </div>
            <div>
                @{
                    Html.RenderAction("OrderTwoWay", "Customer", new { Id = Convert.ToInt32(Session["IDChieuVe"]) });
                }
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tiếp tục" class="btn btn-default" />
            </div>
        </div>
    </div>
    }
</body>
</html>
